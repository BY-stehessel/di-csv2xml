# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=di-csv2xml

matrix:
  # These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:

    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: beta
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: beta

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: Z6Xk3cyaSpVyAmmOZynOqANdl6OWCbANk8zLTSpZWW3K/pAe7oUgn4bMPZpnmplp2/Wc5XHykUziw8C+hO4NRhXT9JL0jbWedpRk8ITZybEamvFkbjqc9zDk4X4mFx3tse03kwhlSD7D9ZiEEnz9/lyDHoAFmDSOXdxLgmzxl+irhhxbOe1DiJu2T1/dUt2xDd6Bbp+aQnEOjVziDfmo2TIe8b6jdeKwGflY6O7NsZ4wLy1Tb5wfYMAnD7zBaK91BhmjnkMsVbX7w4LWff9BVMbhc3W4SXZwAvLyd4tbAzEz3Pm7v3xrfJ7idmuBQTP6wFJB2Htxb4meQrzBHuAX1k6wnb+rYIE5in6mEMm6XiAFMILkZSiZY4T9CAXitrj5Ay7nlMjrRP5vEfFFta3Fc7GTRL0FVn4NwNGl4MyNZ++WwZCMjN9N/GHu8CiCnRoXZb64DIACU2gqeIzgvyH74Zx0Y+sTyGeXhZsxNRB5wrLHd05Sn/g6vIadkwYlqwMK58i8HLdfEVUOah+AeR1wXxYhWRbz4a71RLt1HDD/A5ECdRZr8MbI6dR8sl/bIiYcKKX2w2D++qT5XUUHPhVup2biyGeb3028p3jkbzsUXkgzS8Sd04sbbtqB4+nkgN9G0Q0gs7k/ws0vSbgZnSLbVgdaDfKodi4TBs1PvZj5z48=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
